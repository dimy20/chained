{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\FormikForm\\\\FormikForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { Form, FormGroup, Button } from 'react-bootstrap';\nimport * as Yup from 'yup';\nimport ErrorForm from './Error/ErrorForm';\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(1, 'must have at leat one character').max(255, 'no more than 255 characters are allowed').required('must enter name'),\n  description: Yup.string().min(15, 'must be at least 15 characters long').max(255, 'description should not be longer than 255 characters').required('must enter a description')\n});\n\nconst FormikForm = () => {\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      description: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n      setTimeout(() => {\n        JSON.stringify(values);\n        resetForm();\n        setSubmitting(false);\n      }, 1000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    handleReset,\n    isSubmitting\n  }) => {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      id: \"name\",\n      type: \"text\",\n      placeholder: \"Enter your name\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"TextArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Description\")), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"textArea\",\n      id: \"textArea\",\n      type: \"text\",\n      placeholder: \"Enter your Description\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Save\"));\n  });\n};\n\nexport default FormikForm;","map":{"version":3,"sources":["C:/Users/usuario/Desktop/chained/chained/src/Components/FormikForm/FormikForm.js"],"names":["React","Formik","Form","FormGroup","Button","Yup","ErrorForm","validationSchema","object","shape","name","string","min","max","required","description","FormikForm","values","setSubmitting","resetForm","setTimeout","JSON","stringify","errors","touched","handleBlur","handleChange","handleSubmit","handleReset","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Formik} from 'formik';\r\nimport {Form,FormGroup,Button} from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\nimport ErrorForm from './Error/ErrorForm';\r\nconst validationSchema = Yup.object().shape({\r\n    name : Yup.string()\r\n    .min(1,'must have at leat one character')\r\n    .max(255,'no more than 255 characters are allowed')\r\n    .required('must enter name'),\r\n    description : Yup.string()\r\n    .min(15,'must be at least 15 characters long')\r\n    .max(255,'description should not be longer than 255 characters')\r\n    .required('must enter a description')\r\n});\r\nconst FormikForm = ()=>{\r\n    return (\r\n        \r\n            <Formik \r\n            initialValues ={{name : '', description : ''}}\r\n            validationSchema = {validationSchema}\r\n            onSubmit = {(values,{setSubmitting,resetForm})=>{\r\n                setSubmitting(true);\r\n                setTimeout(()=>{\r\n                    JSON.stringify(values);\r\n                    resetForm();\r\n                    setSubmitting(false);\r\n                },1000)\r\n            }}\r\n            >\r\n            {({values,errors,touched,handleBlur,handleChange,handleSubmit,handleReset,isSubmitting})=>{\r\n               return (\r\n                <Form onSubmit = {handleSubmit}>\r\n                <div>\r\n                <div>\r\n                <label htmlFor = 'name'>Name</label>\r\n                </div>\r\n                \r\n                    <input \r\n                    name= 'name' \r\n                    id= 'name'\r\n                    type = 'text'\r\n                    placeholder = 'Enter your name'\r\n                    onChange = {handleChange} \r\n                    onBlur = {handleBlur} \r\n                    value ={values.name}\r\n                    >\r\n                        \r\n                    </input>  \r\n                </div>\r\n                <div>\r\n\r\n                <div>\r\n                <label htmlFor = 'TextArea'>Description</label>\r\n                </div>\r\n                \r\n                    <input \r\n                    name= 'textArea' \r\n                    id = 'textArea'\r\n                    type = 'text'\r\n                    placeholder = 'Enter your Description'\r\n                    onChange = {handleChange} \r\n                    onBlur = {handleBlur} \r\n                    value ={values.description}\r\n                    >\r\n                        \r\n                    </input>  \r\n                </div>\r\n                \r\n                    <Button variant=\"primary\" type=\"submit\" disabled = {isSubmitting}>\r\n                    Save\r\n                    </Button>\r\n            \r\n\r\n                </Form>\r\n               )\r\n              \r\n\r\n            }}\r\n            </Formik>\r\n              \r\n    \r\n                \r\n    )\r\n}\r\nexport default FormikForm;"]},"metadata":{},"sourceType":"module"}