{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\AnimatedQuote\\\\AnimatedQuote.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Styles from \"./AnimatedQuote.module.css\";\nimport Typical from \"react-typical\";\nexport default function AnimatedQuote(props) {\n  const quoteText = \"I love you, not only for what you are, but for what...\";\n  const [quote, setQuote] = useState(\"\");\n\n  for (let i = 0; i <= quoteText.length; i++) {\n    setQuote(quoteText[i]);\n  }\n\n  useEffect(() => {\n    console.log(quote);\n  }, [quote]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.quote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/AnimatedQuote/AnimatedQuote.js"],"names":["React","useState","useEffect","Styles","Typical","AnimatedQuote","props","quoteText","quote","setQuote","i","length","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5C,QAAMC,SAAS,GAAG,wDAAlB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AACA,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,SAAS,CAACI,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC3CD,IAAAA,QAAQ,CAACF,SAAS,CAACG,CAAD,CAAV,CAAR;AACA;;AACDR,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACK,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Styles from \"./AnimatedQuote.module.css\";\r\nimport Typical from \"react-typical\";\r\nexport default function AnimatedQuote(props) {\r\n\tconst quoteText = \"I love you, not only for what you are, but for what...\";\r\n\tconst [quote, setQuote] = useState(\"\");\r\n\tfor (let i = 0; i <= quoteText.length; i++) {\r\n\t\tsetQuote(quoteText[i]);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tconsole.log(quote);\r\n\t}, [quote]);\r\n\treturn <div className={Styles.quote}>{}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}