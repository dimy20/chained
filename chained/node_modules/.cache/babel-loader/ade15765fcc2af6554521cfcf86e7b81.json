{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\OptimizedFetchComponentTest\\\\OptimizedFetchComponentTest.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport LoadingContext from \"../../LoadingContext\";\nimport axios from \"axios\";\nexport default function OptimizedFetchComponentTest(props) {\n  const {\n    Loading,\n    setLoading\n  } = useContext(LoadingContext);\n  const {\n    render,\n    query,\n    PageNumber\n  } = props;\n  const [imgArr, setImgArr] = useState([]); //WHEN QUERY CHANGES SETS imgArr TO EMPTY ARR SO PREVIUOS IMGS AND FOLLOWING IMGS DONT GET STACKED\n\n  useEffect(() => {\n    setImgArr([]);\n  }, [query]);\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios({\n      method: \"GET\",\n      url: `https://pixabay.com/api/?key=16381049-c197cfa5caeabac8c93d8da2c&q=${query}&image_type=photo&per_page=${20}&page=${pageNumber}`,\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(response => {\n      //FIX THIS REPETTITIOS\n      console.log(response.data.hits[0]);\n      setImgArr(prevImgs => {\n        return [...new Set([...prevImgs, ...response.data.hits])];\n      });\n      setLoading(false);\n    }).catch(err => {\n      //ignore everytime we cancel the request\n      if (axios.isCancel(err)) {\n        return;\n      }\n    });\n    return () => cancel();\n  }, [query, pageNumber]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, render(Loading, imgArr));\n}","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/OptimizedFetchComponentTest/OptimizedFetchComponentTest.js"],"names":["React","useEffect","useState","useContext","LoadingContext","axios","OptimizedFetchComponentTest","props","Loading","setLoading","render","query","PageNumber","imgArr","setImgArr","cancel","method","url","pageNumber","cancelToken","CancelToken","c","then","response","console","log","data","hits","prevImgs","Set","catch","err","isCancel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe,SAASC,2BAAT,CAAqCC,KAArC,EAA4C;AAC1D,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BN,UAAU,CAACC,cAAD,CAA1C;AACA,QAAM;AAAEM,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAgCL,KAAtC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC,CAH0D,CAI1D;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,SAAS,CAAC,EAAD,CAAT;AACA,GAFQ,EAEN,CAACH,KAAD,CAFM,CAAT;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIM,MAAJ;AACAV,IAAAA,KAAK,CAAC;AACLW,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,GAAG,EAAG,qEAAoEN,KAAM,8BAA6B,EAAG,SAAQO,UAAW,EAF9H;AAGLC,MAAAA,WAAW,EAAE,IAAId,KAAK,CAACe,WAAV,CAAuBC,CAAD,IAAQN,MAAM,GAAGM,CAAvC;AAHR,KAAD,CAAL,CAKEC,IALF,CAKQC,QAAD,IAAc;AACnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmB,CAAnB,CAAZ;AACAb,MAAAA,SAAS,CAAEc,QAAD,IAAc;AACvB,eAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,QAAJ,EAAc,GAAGL,QAAQ,CAACG,IAAT,CAAcC,IAA/B,CAAR,CAAJ,CAAP;AACA,OAFQ,CAAT;AAGAlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAZF,EAaEqB,KAbF,CAaSC,GAAD,IAAS;AACf;AACA,UAAI1B,KAAK,CAAC2B,QAAN,CAAeD,GAAf,CAAJ,EAAyB;AACxB;AACA;AACD,KAlBF;AAmBA,WAAO,MAAMhB,MAAM,EAAnB;AACA,GAvBQ,EAuBN,CAACJ,KAAD,EAAQO,UAAR,CAvBM,CAAT;AAyBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMR,MAAM,CAACF,OAAD,EAAUK,MAAV,CAAZ,CAAP;AACA","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport LoadingContext from \"../../LoadingContext\";\r\nimport axios from \"axios\";\r\nexport default function OptimizedFetchComponentTest(props) {\r\n\tconst { Loading, setLoading } = useContext(LoadingContext);\r\n\tconst { render, query, PageNumber } = props;\r\n\tconst [imgArr, setImgArr] = useState([]);\r\n\t//WHEN QUERY CHANGES SETS imgArr TO EMPTY ARR SO PREVIUOS IMGS AND FOLLOWING IMGS DONT GET STACKED\r\n\tuseEffect(() => {\r\n\t\tsetImgArr([]);\r\n\t}, [query]);\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tlet cancel;\r\n\t\taxios({\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: `https://pixabay.com/api/?key=16381049-c197cfa5caeabac8c93d8da2c&q=${query}&image_type=photo&per_page=${20}&page=${pageNumber}`,\r\n\t\t\tcancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\t//FIX THIS REPETTITIOS\r\n\t\t\t\tconsole.log(response.data.hits[0]);\r\n\t\t\t\tsetImgArr((prevImgs) => {\r\n\t\t\t\t\treturn [...new Set([...prevImgs, ...response.data.hits])];\r\n\t\t\t\t});\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\t//ignore everytime we cancel the request\r\n\t\t\t\tif (axios.isCancel(err)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn () => cancel();\r\n\t}, [query, pageNumber]);\r\n\r\n\treturn <div>{render(Loading, imgArr)}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}