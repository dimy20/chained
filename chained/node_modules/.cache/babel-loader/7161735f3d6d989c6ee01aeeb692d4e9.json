{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\MasonryGridLayout\\\\myCard.js\";\nimport React, { useEffect, useRef, useState, useContext, ReactDOM } from \"react\";\nimport Styles from \"./myCard.module.css\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { Badge, Card } from \"@material-ui/core\";\nimport { Button } from \"react-bootstrap\";\nimport { number } from \"joi\";\nimport LastPositionStateContext from \"../../Contexts/LastPositionStateContext\";\nexport default function MyCard(props) {\n  const {\n    newquote,\n    username,\n    quoteTittle,\n    quote,\n    tag\n  } = props;\n  const {\n    lastPosition,\n    setLastPosition\n  } = useContext(LastPositionStateContext); //Getting the state from the ref in props;\n\n  const Cardref = useRef();\n  useEffect(() => {\n    return () => {\n      let {\n        x,\n        y\n      } = Cardref.current.getBoundingClientRect();\n      x = Math.floor(x);\n      y = Math.floor(y);\n      let area = getComputedStyle(Cardref.current).gridArea.split(\"/\");\n      setLastPosition({\n        x: x,\n        y: y,\n        boxArea: area.pop()\n      });\n    };\n  }, []);\n  const style = {\n    transform: \"translateX(300px)\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: Cardref,\n    style: newquote ? style : null,\n    className: newquote ? Styles.newQuote : Styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.section1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: Styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, tag), /*#__PURE__*/React.createElement(\"h2\", {\n    className: Styles.h2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, quoteTittle), /*#__PURE__*/React.createElement(\"p\", {\n    className: Styles.adjective,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, username), /*#__PURE__*/React.createElement(\"p\", {\n    className: Styles.quote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, quote)), /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.section2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BookmarkIcon, {\n    style: {\n      color: \"#127ba3\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteIcon, {\n    style: {\n      color: \"#127ba3\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(VisibilityIcon, {\n    style: {\n      color: \"#127ba3\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/MasonryGridLayout/myCard.js"],"names":["React","useEffect","useRef","useState","useContext","ReactDOM","Styles","VisibilityIcon","FavoriteIcon","BookmarkIcon","Badge","Card","Button","number","LastPositionStateContext","MyCard","props","newquote","username","quoteTittle","quote","tag","lastPosition","setLastPosition","Cardref","x","y","current","getBoundingClientRect","Math","floor","area","getComputedStyle","gridArea","split","boxArea","pop","style","transform","newQuote","wrapper","section1","header","h2","adjective","section2","bar","color"],"mappings":"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","sourcesContent":["import React, {\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n\tuseContext,\r\n\tReactDOM,\r\n} from \"react\";\r\nimport Styles from \"./myCard.module.css\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport { Badge, Card } from \"@material-ui/core\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { number } from \"joi\";\r\nimport LastPositionStateContext from \"../../Contexts/LastPositionStateContext\";\r\nexport default function MyCard(props) {\r\n\tconst { newquote, username, quoteTittle, quote, tag } = props;\r\n\tconst { lastPosition, setLastPosition } = useContext(\r\n\t\tLastPositionStateContext\r\n\t); //Getting the state from the ref in props;\r\n\tconst Cardref = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tlet { x, y } = Cardref.current.getBoundingClientRect();\r\n\t\t\tx = Math.floor(x);\r\n\t\t\ty = Math.floor(y);\r\n\t\t\tlet area = getComputedStyle(Cardref.current).gridArea.split(\"/\");\r\n\t\t\tsetLastPosition({\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\tboxArea: area.pop(),\r\n\t\t\t});\r\n\t\t};\r\n\t}, []);\r\n\tconst style = { transform: \"translateX(300px)\" };\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={Cardref}\r\n\t\t\tstyle={newquote ? style : null}\r\n\t\t\tclassName={newquote ? Styles.newQuote : Styles.wrapper}\r\n\t\t>\r\n\t\t\t<div className={Styles.section1}>\r\n\t\t\t\t<p className={Styles.header}>{tag}</p>\r\n\t\t\t\t<h2 className={Styles.h2}>{quoteTittle}</h2>\r\n\t\t\t\t<p className={Styles.adjective}>{username}</p>\r\n\t\t\t\t<p className={Styles.quote}>{quote}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={Styles.section2}>\r\n\t\t\t\t<div className={Styles.bar}>\r\n\t\t\t\t\t<BookmarkIcon style={{ color: \"#127ba3\" }}></BookmarkIcon>\r\n\t\t\t\t\t<FavoriteIcon style={{ color: \"#127ba3\" }}></FavoriteIcon>\r\n\t\t\t\t\t<VisibilityIcon style={{ color: \"#127ba3\" }}></VisibilityIcon>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}