{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\InfiniteScroll\\\\InfiniteScroll.js\";\nimport React, { useRef, useCallback, useState } from \"react\";\nexport default function InfiniteScroll(props) {\n  const {\n    render,\n    initialPageNumber\n  } = props;\n  const [imgNumber, setimgNumber] = useState(initialPageNumber);\n  const observer = useRef();\n  const lastImgElement = useCallback(node => {\n    if (Loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      console.log(entries);\n\n      if (entries[0].isIntersecting) {\n        console.log(\"visible\");\n        setimgNumber(previmgNumber => previmgNumber + 1);\n      }\n    });\n\n    if (node) {\n      observer.current.observe(node);\n    }\n\n    console.log(node);\n  }, [Loading]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, render(lastImgElement, imgNumber));\n}","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/InfiniteScroll/InfiniteScroll.js"],"names":["React","useRef","useCallback","useState","InfiniteScroll","props","render","initialPageNumber","imgNumber","setimgNumber","observer","lastImgElement","node","Loading","current","disconnect","IntersectionObserver","entries","console","log","isIntersecting","previmgNumber","observe"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,EAAqCC,QAArC,QAAqD,OAArD;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAgCF,KAAtC;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAACI,iBAAD,CAA1C;AACA,QAAMG,QAAQ,GAAGT,MAAM,EAAvB;AACA,QAAMU,cAAc,GAAGT,WAAW,CAChCU,IAAD,IAAU;AACT,QAAIC,OAAJ,EAAa;AACb,QAAIH,QAAQ,CAACI,OAAb,EAAsBJ,QAAQ,CAACI,OAAT,CAAiBC,UAAjB;AAEtBL,IAAAA,QAAQ,CAACI,OAAT,GAAmB,IAAIE,oBAAJ,CAA0BC,OAAD,IAAa;AACxDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWG,cAAf,EAA+B;AAC9BF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAV,QAAAA,YAAY,CAAEY,aAAD,IAAmBA,aAAa,GAAG,CAApC,CAAZ;AACA;AACD,KANkB,CAAnB;;AAOA,QAAIT,IAAJ,EAAU;AACTF,MAAAA,QAAQ,CAACI,OAAT,CAAiBQ,OAAjB,CAAyBV,IAAzB;AACA;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,GAhBgC,EAiBjC,CAACC,OAAD,CAjBiC,CAAlC;AAoBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,MAAM,CAACK,cAAD,EAAiBH,SAAjB,CAAZ,CAAP;AACA","sourcesContent":["import React, { useRef, useCallback, useState } from \"react\";\r\n\r\nexport default function InfiniteScroll(props) {\r\n\tconst { render, initialPageNumber } = props;\r\n\tconst [imgNumber, setimgNumber] = useState(initialPageNumber);\r\n\tconst observer = useRef();\r\n\tconst lastImgElement = useCallback(\r\n\t\t(node) => {\r\n\t\t\tif (Loading) return;\r\n\t\t\tif (observer.current) observer.current.disconnect();\r\n\r\n\t\t\tobserver.current = new IntersectionObserver((entries) => {\r\n\t\t\t\tconsole.log(entries);\r\n\t\t\t\tif (entries[0].isIntersecting) {\r\n\t\t\t\t\tconsole.log(\"visible\");\r\n\t\t\t\t\tsetimgNumber((previmgNumber) => previmgNumber + 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (node) {\r\n\t\t\t\tobserver.current.observe(node);\r\n\t\t\t}\r\n\t\t\tconsole.log(node);\r\n\t\t},\r\n\t\t[Loading]\r\n\t);\r\n\r\n\treturn <div>{render(lastImgElement, imgNumber)}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}