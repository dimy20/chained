{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\Homev2\\\\Profile\\\\UsersQuotes\\\\UsersQuotes.js\";\nimport React, { useEffect, useState } from \"react\";\nimport QuotesGrid from \"../../QuotesGrid/QuotesGrid\";\nimport Card from \"../../../Card/Card\";\nimport Styles from \"./UserQuotes.module.css\";\nimport { date } from \"joi\";\nexport default function UsersQuotes(props) {\n  const {\n    isProfile,\n    isUser,\n    userId\n  } = props; // 1-> This is called when is logged in\n  // 2-> This is called when is For an user\n\n  const [quotes, setQuotes] = useState([]);\n  useEffect(() => {\n    console.log(\"I got called\");\n\n    if (isProfile) {\n      fetch(\"http://localhost:5000/user/quotes\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      }).then(res => {\n        res.json().then(data => {\n          setQuotes(data.quotes);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (isUser) {\n      fetch(`http://localhost:5000/user/quotes/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      }).then(res => {\n        res.json().then(data => {\n          setQuotes(data.quotes);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, quotes.map((q, index) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: index,\n      centered: true,\n      width: \"92%\",\n      height: \"100%\",\n      username: q.author,\n      quote: `“${q.quote}”`,\n      tag: \"Love\",\n      quoteTittle: q.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/Homev2/Profile/UsersQuotes/UsersQuotes.js"],"names":["React","useEffect","useState","QuotesGrid","Card","Styles","date","UsersQuotes","props","isProfile","isUser","userId","quotes","setQuotes","console","log","fetch","method","headers","Authorization","localStorage","token","then","res","json","data","catch","err","container","map","q","index","author","quote","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,QAAqB,KAArB;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1C,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,MAAgCH,KAAtC,CAD0C,CAE1C;AACA;;AAEA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,QAAIN,SAAJ,EAAe;AACdO,MAAAA,KAAK,CAAC,mCAAD,EAAsC;AAC1CC,QAAAA,MAAM,EAAE,KADkC;AAE1CC,QAAAA,OAAO,EAAE;AACR,0BAAgB,kBADR;AAERC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,KAAM;AAFpC;AAFiC,OAAtC,CAAL,CAOEC,IAPF,CAOQC,GAAD,IAAS;AACdA,QAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBG,IAAD,IAAU;AACzBZ,UAAAA,SAAS,CAACY,IAAI,CAACb,MAAN,CAAT;AACA,SAFD;AAGA,OAXF,EAYEc,KAZF,CAYSC,GAAD,IAAS;AACfb,QAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACA,OAdF;AAeA,KAhBD,MAgBO,IAAIjB,MAAJ,EAAY;AAClBM,MAAAA,KAAK,CAAE,qCAAoCL,MAAO,EAA7C,EAAgD;AACpDM,QAAAA,MAAM,EAAE,KAD4C;AAEpDC,QAAAA,OAAO,EAAE;AACR,0BAAgB,kBADR;AAERC,UAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,KAAM;AAFpC;AAF2C,OAAhD,CAAL,CAOEC,IAPF,CAOQC,GAAD,IAAS;AACdA,QAAAA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAiBG,IAAD,IAAU;AACzBZ,UAAAA,SAAS,CAACY,IAAI,CAACb,MAAN,CAAT;AACA,SAFD;AAGA,OAXF,EAYEc,KAZF,CAYSC,GAAD,IAAS;AACfb,QAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACA,OAdF;AAeA;AACD,GAnCQ,EAmCN,EAnCM,CAAT;AAqCA,sBACC;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACuB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEhB,MAAM,CAACiB,GAAP,CAAW,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACzB,wBACC,oBAAC,IAAD;AACC,MAAA,GAAG,EAAEA,KADN;AAEC,MAAA,QAAQ,EAAE,IAFX;AAGC,MAAA,KAAK,EAAC,KAHP;AAIC,MAAA,MAAM,EAAC,MAJR;AAKC,MAAA,QAAQ,EAAED,CAAC,CAACE,MALb;AAMC,MAAA,KAAK,EAAG,IAAGF,CAAC,CAACG,KAAM,GANpB;AAOC,MAAA,GAAG,EAAC,MAPL;AAQC,MAAA,WAAW,EAAEH,CAAC,CAACI,KARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAYA,GAbA,CADF,CADD;AAkBA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport QuotesGrid from \"../../QuotesGrid/QuotesGrid\";\r\nimport Card from \"../../../Card/Card\";\r\nimport Styles from \"./UserQuotes.module.css\";\r\nimport { date } from \"joi\";\r\nexport default function UsersQuotes(props) {\r\n\tconst { isProfile, isUser, userId } = props;\r\n\t// 1-> This is called when is logged in\r\n\t// 2-> This is called when is For an user\r\n\r\n\tconst [quotes, setQuotes] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"I got called\");\r\n\t\tif (isProfile) {\r\n\t\t\tfetch(\"http://localhost:5000/user/quotes\", {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.token}`,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tres.json().then((data) => {\r\n\t\t\t\t\t\tsetQuotes(data.quotes);\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\t} else if (isUser) {\r\n\t\t\tfetch(`http://localhost:5000/user/quotes/${userId}`, {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\tAuthorization: `Bearer ${localStorage.token}`,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tres.json().then((data) => {\r\n\t\t\t\t\t\tsetQuotes(data.quotes);\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={Styles.container}>\r\n\t\t\t{quotes.map((q, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tcentered={true}\r\n\t\t\t\t\t\twidth=\"92%\"\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tusername={q.author}\r\n\t\t\t\t\t\tquote={`“${q.quote}”`}\r\n\t\t\t\t\t\ttag=\"Love\"\r\n\t\t\t\t\t\tquoteTittle={q.title}\r\n\t\t\t\t\t></Card>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}