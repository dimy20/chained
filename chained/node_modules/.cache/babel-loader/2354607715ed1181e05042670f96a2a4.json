{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\FetchImages\\\\FetchImagesFromApi.js\";\n\n/* \r\nMainly this is a general purpose Component for fetching data from the api.\r\n\r\n*/\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\nimport ImagesContext from \"../../ImagesContext\";\nimport axios from \"axios\";\nimport LoadingContext from \"../../LoadingContext\";\nexport default function FetchImagesFromApi(props) {\n  const {\n    render,\n    query,\n    PageNumber\n  } = props;\n  const {\n    Loading,\n    setLoading\n  } = useContext(LoadingContext);\n  const [Err, setErr] = useState(false);\n  const [ImgArr, setImgArr] = useState([]); // this may not be necessary\n\n  const [hasMore, setHasMore] = useState(false); // this may not be necessary\n\n  const {\n    ImgArrContext,\n    setImgArrContext\n  } = useContext(ImagesContext);\n  useEffect(() => {\n    setImgArrContext(ImgArr);\n  }, [ImgArr]);\n  useEffect(() => {\n    setImgArr([]);\n  }, [query]);\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios({\n      method: \"GET\",\n      url: `https://pixabay.com/api/?key=16381049-c197cfa5caeabac8c93d8da2c&q=${query}&image_type=photo&per_page=${21}&page=${PageNumber}`,\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(response => {\n      //FIX THIS REPETTITIOS\n      console.log(\"Heloooo\", response.data.hits);\n      setImgArr(prevImgs => {\n        return [...new Set([...prevImgs, ...response.data.hits])];\n      });\n      setLoading(false);\n    }).catch(err => {\n      //ignore everytime we cancel the request\n      if (axios.isCancel(err)) {\n        return;\n      }\n\n      setErr(true);\n    });\n    return () => cancel();\n  }, [query, PageNumber]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, render(ImgArr, Loading));\n}","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/FetchImages/FetchImagesFromApi.js"],"names":["React","useState","useEffect","useContext","useRef","ImagesContext","axios","LoadingContext","FetchImagesFromApi","props","render","query","PageNumber","Loading","setLoading","Err","setErr","ImgArr","setImgArr","hasMore","setHasMore","ImgArrContext","setImgArrContext","cancel","method","url","cancelToken","CancelToken","c","then","response","console","log","data","hits","prevImgs","Set","catch","err","isCancel"],"mappings":";;AAAA;;;;AAIA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAgCH,KAAtC;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BX,UAAU,CAACI,cAAD,CAA1C;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC,CAJiD,CAIP;;AAC1C,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC,CALiD,CAKF;;AAC/C,QAAM;AAAEoB,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAsCnB,UAAU,CAACE,aAAD,CAAtD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACfoB,IAAAA,gBAAgB,CAACL,MAAD,CAAhB;AACA,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACfgB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACA,GAFQ,EAEN,CAACP,KAAD,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIS,MAAJ;AACAjB,IAAAA,KAAK,CAAC;AACLkB,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,GAAG,EAAG,qEAAoEd,KAAM,8BAA6B,EAAG,SAAQC,UAAW,EAF9H;AAGLc,MAAAA,WAAW,EAAE,IAAIpB,KAAK,CAACqB,WAAV,CAAuBC,CAAD,IAAQL,MAAM,GAAGK,CAAvC;AAHR,KAAD,CAAL,CAKEC,IALF,CAKQC,QAAD,IAAc;AACnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,QAAQ,CAACG,IAAT,CAAcC,IAArC;AACAhB,MAAAA,SAAS,CAAEiB,QAAD,IAAc;AACvB,eAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,QAAJ,EAAc,GAAGL,QAAQ,CAACG,IAAT,CAAcC,IAA/B,CAAR,CAAJ,CAAP;AACA,OAFQ,CAAT;AAGApB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAZF,EAaEuB,KAbF,CAaSC,GAAD,IAAS;AACf;AACA,UAAIhC,KAAK,CAACiC,QAAN,CAAeD,GAAf,CAAJ,EAAyB;AACxB;AACA;;AACDtB,MAAAA,MAAM,CAAC,IAAD,CAAN;AACA,KAnBF;AAoBA,WAAO,MAAMO,MAAM,EAAnB;AACA,GAxBQ,EAwBN,CAACZ,KAAD,EAAQC,UAAR,CAxBM,CAAT;AA0BA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,MAAM,CAACO,MAAD,EAASJ,OAAT,CAAZ,CAAP;AACA","sourcesContent":["/* \r\nMainly this is a general purpose Component for fetching data from the api.\r\n\r\n*/\r\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport ImagesContext from \"../../ImagesContext\";\r\nimport axios from \"axios\";\r\nimport LoadingContext from \"../../LoadingContext\";\r\n\r\nexport default function FetchImagesFromApi(props) {\r\n\tconst { render, query, PageNumber } = props;\r\n\tconst { Loading, setLoading } = useContext(LoadingContext);\r\n\tconst [Err, setErr] = useState(false);\r\n\tconst [ImgArr, setImgArr] = useState([]); // this may not be necessary\r\n\tconst [hasMore, setHasMore] = useState(false); // this may not be necessary\r\n\tconst { ImgArrContext, setImgArrContext } = useContext(ImagesContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetImgArrContext(ImgArr);\r\n\t}, [ImgArr]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetImgArr([]);\r\n\t}, [query]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tlet cancel;\r\n\t\taxios({\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: `https://pixabay.com/api/?key=16381049-c197cfa5caeabac8c93d8da2c&q=${query}&image_type=photo&per_page=${21}&page=${PageNumber}`,\r\n\t\t\tcancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\t//FIX THIS REPETTITIOS\r\n\t\t\t\tconsole.log(\"Heloooo\", response.data.hits);\r\n\t\t\t\tsetImgArr((prevImgs) => {\r\n\t\t\t\t\treturn [...new Set([...prevImgs, ...response.data.hits])];\r\n\t\t\t\t});\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\t//ignore everytime we cancel the request\r\n\t\t\t\tif (axios.isCancel(err)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsetErr(true);\r\n\t\t\t});\r\n\t\treturn () => cancel();\r\n\t}, [query, PageNumber]);\r\n\r\n\treturn <div>{render(ImgArr, Loading)}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}