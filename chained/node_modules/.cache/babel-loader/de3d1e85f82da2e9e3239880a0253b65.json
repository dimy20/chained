{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\Home\\\\Card\\\\Card.js\";\nimport React, { useRef, useState, useContext } from 'react';\nimport Styles from './Card.module.css';\nimport { Popover, OverlayTrigger, ListGroup } from 'react-bootstrap';\nimport ImagesContext from '../../../ImagesContext';\n\nconst Card = props => {\n  const {\n    ImgArr,\n    setImgArr\n  } = useContext();\n  const {\n    src\n  } = props;\n  const [IsHovered, setIsHovered] = useState(false);\n\n  const handleOnMouseOver = () => {\n    setIsHovered(true);\n  };\n\n  const handleOnMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  const popover = /*#__PURE__*/React.createElement(Popover, {\n    id: \"popover-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Popover.Title, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"This pin is based on your recent activity\"), /*#__PURE__*/React.createElement(Popover.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.testContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: Styles.test,\n    action: true,\n    href: \"#link1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Hide pin\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: Styles.test,\n    action: true,\n    href: \"#link1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Download image\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: Styles.test,\n    action: true,\n    href: \"#link1\",\n    s: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Report pin\"))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseLeave: handleOnMouseLeave,\n    onMouseOver: handleOnMouseOver,\n    className: Styles.Wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: IsHovered ? Styles.imgOnHover : Styles.img,\n    src: src,\n    height: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, IsHovered && /*#__PURE__*/React.createElement(\"button\", {\n    className: Styles.ShareButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"___\"), IsHovered && /*#__PURE__*/React.createElement(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"right\",\n    overlay: popover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: Styles.OptionsButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, \"...\")), IsHovered && /*#__PURE__*/React.createElement(\"button\", {\n    className: Styles.GuardarButtonVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"GUARDAR\")));\n};\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/Home/Card/Card.js"],"names":["React","useRef","useState","useContext","Styles","Popover","OverlayTrigger","ListGroup","ImagesContext","Card","props","ImgArr","setImgArr","src","IsHovered","setIsHovered","handleOnMouseOver","handleOnMouseLeave","popover","testContainer","test","Wrapper","imgOnHover","img","container","ShareButton","OptionsButton","GuardarButtonVisible"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAsBC,QAAtB,EAAgCC,UAAhC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,OAAR,EAAgBC,cAAhB,EAA+BC,SAA/B,QAA+C,iBAA/C;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAS;AAClB,QAAM;AAACC,IAAAA,MAAD;AAAQC,IAAAA;AAAR,MAAqBT,UAAU,EAArC;AACA,QAAM;AAACU,IAAAA;AAAD,MAAQH,KAAd;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMc,iBAAiB,GAAG,MAAI;AAC1BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAGA,QAAME,kBAAkB,GAAG,MAAI;AAC3BF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAIA,QAAMG,OAAO,gBACT,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD,CAAS,KAAT;AAAe,IAAA,EAAE,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,eAEE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAId,MAAM,CAACe,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,SAAS,EAAIf,MAAM,CAACgB,IAApC;AAA0C,IAAA,MAAM,MAAhD;AAAiD,IAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,SAAS,EAAIhB,MAAM,CAACgB,IAApC;AAA0C,IAAA,MAAM,MAAhD;AAAiD,IAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,SAAS,EAAIhB,MAAM,CAACgB,IAApC;AAA0C,IAAA,MAAM,MAAhD;AAAiD,IAAA,IAAI,EAAC,QAAtD;AAA8D,IAAA,CAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADF,CAFF,CADJ;AAaA,sBACI;AAAK,IAAA,YAAY,EAAIH,kBAArB;AAAyC,IAAA,WAAW,EAAGD,iBAAvD;AAA0E,IAAA,SAAS,EAAIZ,MAAM,CAACiB,OAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,SAAS,EAAIP,SAAS,GAAGV,MAAM,CAACkB,UAAV,GAAuBlB,MAAM,CAACmB,GAAzD;AAA8D,IAAA,GAAG,EAAIV,GAArE;AAA0E,IAAA,MAAM,EAAG,OAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,eAGQ;AAAK,IAAA,SAAS,EAAIT,MAAM,CAACoB,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQV,SAAS,iBACT;AAAQ,IAAA,SAAS,EAAIV,MAAM,CAACqB,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHR,EAQKX,SAAS,iBACN,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAG,OAA1B;AAAkC,IAAA,SAAS,EAAG,OAA9C;AAAsD,IAAA,OAAO,EAAII,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAId,MAAM,CAACsB,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CATR,EAgBQZ,SAAS,iBACT;AAAQ,IAAA,SAAS,EAAIV,MAAM,CAACuB,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBR,CAHR,CADJ;AA+BH,CAvDD;;AAwDA,eAAelB,IAAf","sourcesContent":["import React, {useRef,useState, useContext} from 'react';\r\nimport Styles from './Card.module.css';\r\nimport {Popover,OverlayTrigger,ListGroup} from 'react-bootstrap';\r\nimport ImagesContext from '../../../ImagesContext';\r\nconst Card = (props)=>{\r\n    const {ImgArr,setImgArr} = useContext()\r\n    const {src} = props;\r\n    const [IsHovered, setIsHovered] = useState(false);\r\n    const handleOnMouseOver = ()=>{\r\n        setIsHovered(true);\r\n    }\r\n    const handleOnMouseLeave = ()=>{\r\n        setIsHovered(false);\r\n    }\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n          <Popover.Title as=\"h2\">This pin is based on your recent activity</Popover.Title>\r\n          <Popover.Content>\r\n            <div className = {Styles.testContainer}>\r\n                <ListGroup.Item className = {Styles.test} action href=\"#link1\">Hide pin</ListGroup.Item>\r\n                <ListGroup.Item className = {Styles.test} action href=\"#link1\">Download image</ListGroup.Item>\r\n                <ListGroup.Item className = {Styles.test} action href=\"#link1\"s>Report pin</ListGroup.Item>\r\n            </div>\r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n\r\n    return (\r\n        <div onMouseLeave = {handleOnMouseLeave} onMouseOver= {handleOnMouseOver} className = {Styles.Wrapper}>\r\n                <img className = {IsHovered ? Styles.imgOnHover : Styles.img} src = {src} height = '200px'>\r\n                </img>\r\n                <div className = {Styles.container}>\r\n                {\r\n                        IsHovered &&\r\n                        <button className = {Styles.ShareButton}>\r\n                            ___\r\n                        </button>\r\n                    }\r\n                    \r\n                    {IsHovered &&\r\n                        <OverlayTrigger trigger = 'click' placement = 'right' overlay = {popover}>\r\n                            <button className = {Styles.OptionsButton}>...</button>\r\n                        </OverlayTrigger>\r\n                         }\r\n\r\n                    \r\n                    \r\n                    {   IsHovered &&                        \r\n                        <button className = {Styles.GuardarButtonVisible}>\r\n                        GUARDAR\r\n                        </button>  \r\n                    }\r\n                    \r\n                           \r\n                </div>\r\n                  \r\n        </div>\r\n    )\r\n}\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}