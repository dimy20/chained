{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst useAsyncData = () => {\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadData = async () => {\n    setIsLoading(true);\n    setError();\n    const resp = await fetch(\"http://localhost:5000/user/following\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    });\n    const parsed = await resp.json();\n    return parsed;\n    /* catch (e) {\r\n    \tsetError(e);\r\n    \tsetIsLoading(false);\r\n    \tconsole.log(e);\r\n    } */\n  }; // 'onMount'\n  // maybe load the data if required\n\n\n  useEffect(() => {\n    loadData().then(result => {\n      setData(result);\n    });\n  }, []); // Return the state and the load function to the component\n\n  return {\n    data,\n    isLoading,\n    error,\n    loadData\n  };\n};\n\nexport default useAsyncData;","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/Homev2/Profile/useAsyncData.js"],"names":["useState","useEffect","useAsyncData","data","setData","error","setError","isLoading","setIsLoading","loadData","resp","fetch","method","headers","Authorization","localStorage","token","parsed","json","then","result"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMS,QAAQ,GAAG,YAAY;AAC5BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,QAAQ;AAER,UAAMI,IAAI,GAAG,MAAMC,KAAK,CAAC,sCAAD,EAAyC;AAChEC,MAAAA,MAAM,EAAE,KADwD;AAEhEC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAERC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,KAAM;AAFpC;AAFuD,KAAzC,CAAxB;AAOA,UAAMC,MAAM,GAAG,MAAMP,IAAI,CAACQ,IAAL,EAArB;AACA,WAAOD,MAAP;AACA;;;;;AAKA,GAlBD,CAJ0B,CAuB1B;AACA;;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,QAAQ,GAAGU,IAAX,CAAiBC,MAAD,IAAY;AAC3BhB,MAAAA,OAAO,CAACgB,MAAD,CAAP;AACA,KAFD;AAGA,GAJQ,EAIN,EAJM,CAAT,CAzB0B,CA+B1B;;AACA,SAAO;AAAEjB,IAAAA,IAAF;AAAQI,IAAAA,SAAR;AAAmBF,IAAAA,KAAnB;AAA0BI,IAAAA;AAA1B,GAAP;AACA,CAjCD;;AAkCA,eAAeP,YAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useAsyncData = () => {\r\n\tconst [data, setData] = useState();\r\n\tconst [error, setError] = useState();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst loadData = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError();\r\n\r\n\t\tconst resp = await fetch(\"http://localhost:5000/user/following\", {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: `Bearer ${localStorage.token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconst parsed = await resp.json();\r\n\t\treturn parsed;\r\n\t\t/* catch (e) {\r\n\t\t\tsetError(e);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tconsole.log(e);\r\n\t\t} */\r\n\t};\r\n\t// 'onMount'\r\n\t// maybe load the data if required\r\n\tuseEffect(() => {\r\n\t\tloadData().then((result) => {\r\n\t\t\tsetData(result);\r\n\t\t});\r\n\t}, []);\r\n\r\n\t// Return the state and the load function to the component\r\n\treturn { data, isLoading, error, loadData };\r\n};\r\nexport default useAsyncData;\r\n"]},"metadata":{},"sourceType":"module"}