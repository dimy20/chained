{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\Home\\\\Home.js\";\nimport React, { useState, useContext, useEffect, useRef, useCallback } from \"react\";\nimport Styles from \"./Home.module.css\";\nimport { CircularProgress } from \"@material-ui/core\"; //components\n\nimport Card from \"./Card/Card\";\nimport CardCollection from \"../CardCollection/CardCollection\"; //hooks\n\nimport useHome from \"./useHome\";\nimport FetchImagesFromApi from \"../FetchImagesFromApi/FetchImagesFromApi\"; //context\n\nimport SearchContext from \"../../SearchContext\";\nimport ImagesContext from \"../../ImagesContext\";\n\nconst Home = ({\n  history\n}) => {\n  const {\n    SearchString,\n    setSearchString\n  } = useContext(SearchContext);\n  const [imgNumber, setimgNumber] = useState(1);\n  const {\n    Loading,\n    err,\n    ImgArr,\n    hasMore\n  } = useHome(SearchString, imgNumber);\n  const observer = useRef();\n  const lastImgElement = useCallback(node => {\n    if (Loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      console.log(entries);\n\n      if (entries[0].isIntersecting) {\n        console.log(\"visible\");\n        setimgNumber(previmgNumber => previmgNumber + 1);\n      }\n    });\n\n    if (node) {\n      observer.current.observe(node);\n    }\n\n    console.log(node);\n  }, [Loading]);\n  console.log(ImgArr);\n  return /*#__PURE__*/React.createElement(FetchImagesFromApi, {\n    query: SearchString,\n    pageNumber: imgNumber,\n    render: (Loading, ImgArr) => {\n      console.log(\"heloooo\", ImgArr);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          border: \"2px solid red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }\n      }, Loading && /*#__PURE__*/React.createElement(\"div\", {\n        className: Styles.loadingContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: Styles.Loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, \"Loading...\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: Styles.CardContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, ImgArr.map((img, index) => {\n        {\n          /* if (ImgArr.length === index + 1) {\r\n          return (\r\n          <div ref={lastImgElement}>\r\n          \t<Card key={img.id} src={img.largeImageURL}></Card>\r\n          </div>\r\n          );\r\n          } */\n          return /*#__PURE__*/React.createElement(Card, {\n            history: history,\n            key: img.id,\n            src: img.largeImageURL,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }\n          });\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/Home/Home.js"],"names":["React","useState","useContext","useEffect","useRef","useCallback","Styles","CircularProgress","Card","CardCollection","useHome","FetchImagesFromApi","SearchContext","ImagesContext","Home","history","SearchString","setSearchString","imgNumber","setimgNumber","Loading","err","ImgArr","hasMore","observer","lastImgElement","node","current","disconnect","IntersectionObserver","entries","console","log","isIntersecting","previmgNumber","observe","border","loadingContainer","CardContainer","map","img","index","id","largeImageURL"],"mappings":"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","sourcesContent":["import React, {\r\n\tuseState,\r\n\tuseContext,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseCallback,\r\n} from \"react\";\r\nimport Styles from \"./Home.module.css\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\n//components\r\nimport Card from \"./Card/Card\";\r\nimport CardCollection from \"../CardCollection/CardCollection\";\r\n//hooks\r\nimport useHome from \"./useHome\";\r\nimport FetchImagesFromApi from \"../FetchImagesFromApi/FetchImagesFromApi\";\r\n//context\r\nimport SearchContext from \"../../SearchContext\";\r\nimport ImagesContext from \"../../ImagesContext\";\r\nconst Home = ({ history }) => {\r\n\tconst { SearchString, setSearchString } = useContext(SearchContext);\r\n\r\n\tconst [imgNumber, setimgNumber] = useState(1);\r\n\tconst { Loading, err, ImgArr, hasMore } = useHome(SearchString, imgNumber);\r\n\r\n\tconst observer = useRef();\r\n\tconst lastImgElement = useCallback(\r\n\t\t(node) => {\r\n\t\t\tif (Loading) return;\r\n\t\t\tif (observer.current) observer.current.disconnect();\r\n\r\n\t\t\tobserver.current = new IntersectionObserver((entries) => {\r\n\t\t\t\tconsole.log(entries);\r\n\t\t\t\tif (entries[0].isIntersecting) {\r\n\t\t\t\t\tconsole.log(\"visible\");\r\n\t\t\t\t\tsetimgNumber((previmgNumber) => previmgNumber + 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (node) {\r\n\t\t\t\tobserver.current.observe(node);\r\n\t\t\t}\r\n\t\t\tconsole.log(node);\r\n\t\t},\r\n\t\t[Loading]\r\n\t);\r\n\tconsole.log(ImgArr);\r\n\r\n\treturn (\r\n\t\t<FetchImagesFromApi\r\n\t\t\tquery={SearchString}\r\n\t\t\tpageNumber={imgNumber}\r\n\t\t\trender={(Loading, ImgArr) => {\r\n\t\t\t\tconsole.log(\"heloooo\", ImgArr);\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div style={{ border: \"2px solid red\" }}>\r\n\t\t\t\t\t\t{Loading && (\r\n\t\t\t\t\t\t\t<div className={Styles.loadingContainer}>\r\n\t\t\t\t\t\t\t\t<h1 className={Styles.Loading}>Loading...</h1>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className={Styles.CardContainer}>\r\n\t\t\t\t\t\t\t{ImgArr.map((img, index) => {\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t/* if (ImgArr.length === index + 1) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div ref={lastImgElement}>\r\n\t\t\t\t\t\t\t\t\t\t<Card key={img.id} src={img.largeImageURL}></Card>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} */\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\t\t\t\thistory={history}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={img.id}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={img.largeImageURL}\r\n\t\t\t\t\t\t\t\t\t\t></Card>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t></FetchImagesFromApi>\r\n\t);\r\n};\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}