{"ast":null,"code":"'use strict'; // Load modules\n\nconst Hoek = require('hoek');\n\nconst ObjectType = require('../object');\n\nconst Ref = require('../../ref'); // Declare internals\n\n\nconst internals = {};\ninternals.Func = class extends ObjectType.constructor {\n  constructor() {\n    super();\n    this._flags.func = true;\n  }\n\n  arity(n) {\n    Hoek.assert(Number.isSafeInteger(n) && n >= 0, 'n must be a positive integer');\n    return this._test('arity', n, function (value, state, options) {\n      if (value.length === n) {\n        return value;\n      }\n\n      return this.createError('function.arity', {\n        n\n      }, state, options);\n    });\n  }\n\n  minArity(n) {\n    Hoek.assert(Number.isSafeInteger(n) && n > 0, 'n must be a strict positive integer');\n    return this._test('minArity', n, function (value, state, options) {\n      if (value.length >= n) {\n        return value;\n      }\n\n      return this.createError('function.minArity', {\n        n\n      }, state, options);\n    });\n  }\n\n  maxArity(n) {\n    Hoek.assert(Number.isSafeInteger(n) && n >= 0, 'n must be a positive integer');\n    return this._test('maxArity', n, function (value, state, options) {\n      if (value.length <= n) {\n        return value;\n      }\n\n      return this.createError('function.maxArity', {\n        n\n      }, state, options);\n    });\n  }\n\n  ref() {\n    return this._test('ref', null, function (value, state, options) {\n      if (Ref.isRef(value)) {\n        return value;\n      }\n\n      return this.createError('function.ref', {\n        value\n      }, state, options);\n    });\n  }\n\n  class() {\n    return this._test('class', null, function (value, state, options) {\n      if (/^\\s*class\\s/.test(value.toString())) {\n        return value;\n      }\n\n      return this.createError('function.class', {\n        value\n      }, state, options);\n    });\n  }\n\n};\nmodule.exports = new internals.Func();","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/node_modules/joi/lib/types/func/index.js"],"names":["Hoek","require","ObjectType","Ref","internals","Func","constructor","_flags","func","arity","n","assert","Number","isSafeInteger","_test","value","state","options","length","createError","minArity","maxArity","ref","isRef","class","test","toString","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\n// Load modules\r\n\r\nconst Hoek = require('hoek');\r\nconst ObjectType = require('../object');\r\nconst Ref = require('../../ref');\r\n\r\n\r\n// Declare internals\r\n\r\nconst internals = {};\r\n\r\n\r\ninternals.Func = class extends ObjectType.constructor {\r\n\r\n    constructor() {\r\n\r\n        super();\r\n        this._flags.func = true;\r\n    }\r\n\r\n    arity(n) {\r\n\r\n        Hoek.assert(Number.isSafeInteger(n) && n >= 0, 'n must be a positive integer');\r\n\r\n        return this._test('arity', n, function (value, state, options) {\r\n\r\n            if (value.length === n) {\r\n                return value;\r\n            }\r\n\r\n            return this.createError('function.arity', { n }, state, options);\r\n        });\r\n    }\r\n\r\n    minArity(n) {\r\n\r\n        Hoek.assert(Number.isSafeInteger(n) && n > 0, 'n must be a strict positive integer');\r\n\r\n        return this._test('minArity', n, function (value, state, options) {\r\n\r\n            if (value.length >= n) {\r\n                return value;\r\n            }\r\n\r\n            return this.createError('function.minArity', { n }, state, options);\r\n        });\r\n    }\r\n\r\n    maxArity(n) {\r\n\r\n        Hoek.assert(Number.isSafeInteger(n) && n >= 0, 'n must be a positive integer');\r\n\r\n        return this._test('maxArity', n, function (value, state, options) {\r\n\r\n            if (value.length <= n) {\r\n                return value;\r\n            }\r\n\r\n            return this.createError('function.maxArity', { n }, state, options);\r\n        });\r\n    }\r\n\r\n    ref() {\r\n\r\n        return this._test('ref', null, function (value, state, options) {\r\n\r\n            if (Ref.isRef(value)) {\r\n                return value;\r\n            }\r\n\r\n            return this.createError('function.ref', { value }, state, options);\r\n        });\r\n    }\r\n\r\n    class() {\r\n\r\n        return this._test('class', null, function (value, state, options) {\r\n\r\n            if ((/^\\s*class\\s/).test(value.toString())) {\r\n                return value;\r\n            }\r\n\r\n            return this.createError('function.class', { value }, state, options);\r\n        });\r\n    }\r\n};\r\n\r\nmodule.exports = new internals.Func();\r\n"]},"metadata":{},"sourceType":"script"}