{"ast":null,"code":"import { useRef, useCallback, useState } from \"react\";\n\nconst useIfiniteScroll = Loading => {\n  const [PageNumber, setPageNumber] = useState(1);\n  const observer = useRef();\n  const lastImgElement = useCallback(node => {\n    if (Loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      console.log(entries);\n\n      if (entries[0].isIntersecting) {\n        console.log(\"visible\");\n        setPageNumber(previmgNumber => previmgNumber + 1);\n      }\n    });\n\n    if (node) {\n      observer.current.observe(node);\n    }\n\n    console.log(node);\n  }, [Loading]);\n  return [lastImgElement];\n};\n\nexport default useIfiniteScroll;","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Hooks/useInfiniteScroll.js"],"names":["useRef","useCallback","useState","useIfiniteScroll","Loading","PageNumber","setPageNumber","observer","lastImgElement","node","current","disconnect","IntersectionObserver","entries","console","log","isIntersecting","previmgNumber","observe"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,QAA9B,QAA8C,OAA9C;;AACA,MAAMC,gBAAgB,GAAIC,OAAD,IAAa;AACrC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAMK,QAAQ,GAAGP,MAAM,EAAvB;AACA,QAAMQ,cAAc,GAAGP,WAAW,CAChCQ,IAAD,IAAU;AACT,QAAIL,OAAJ,EAAa;AACb,QAAIG,QAAQ,CAACG,OAAb,EAAsBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AAEtBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAA0BC,OAAD,IAAa;AACxDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWG,cAAf,EAA+B;AAC9BF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAT,QAAAA,aAAa,CAAEW,aAAD,IAAmBA,aAAa,GAAG,CAApC,CAAb;AACA;AACD,KANkB,CAAnB;;AAOA,QAAIR,IAAJ,EAAU;AACTF,MAAAA,QAAQ,CAACG,OAAT,CAAiBQ,OAAjB,CAAyBT,IAAzB;AACA;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,GAhBgC,EAiBjC,CAACL,OAAD,CAjBiC,CAAlC;AAmBA,SAAO,CAACI,cAAD,CAAP;AACA,CAvBD;;AAwBA,eAAeL,gBAAf","sourcesContent":["import { useRef, useCallback, useState } from \"react\";\r\nconst useIfiniteScroll = (Loading) => {\r\n\tconst [PageNumber, setPageNumber] = useState(1);\r\n\tconst observer = useRef();\r\n\tconst lastImgElement = useCallback(\r\n\t\t(node) => {\r\n\t\t\tif (Loading) return;\r\n\t\t\tif (observer.current) observer.current.disconnect();\r\n\r\n\t\t\tobserver.current = new IntersectionObserver((entries) => {\r\n\t\t\t\tconsole.log(entries);\r\n\t\t\t\tif (entries[0].isIntersecting) {\r\n\t\t\t\t\tconsole.log(\"visible\");\r\n\t\t\t\t\tsetPageNumber((previmgNumber) => previmgNumber + 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (node) {\r\n\t\t\t\tobserver.current.observe(node);\r\n\t\t\t}\r\n\t\t\tconsole.log(node);\r\n\t\t},\r\n\t\t[Loading]\r\n\t);\r\n\treturn [lastImgElement];\r\n};\r\nexport default useIfiniteScroll;\r\n"]},"metadata":{},"sourceType":"module"}