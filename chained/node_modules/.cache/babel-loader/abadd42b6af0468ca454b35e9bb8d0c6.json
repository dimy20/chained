{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\Home\\\\Home.js\";\nimport React, { useState, useContext, useEffect, useRef, useCallback } from \"react\";\nimport Styles from \"./Home.module.css\";\nimport { CircularProgress } from \"@material-ui/core\"; //components\n\nimport Card from \"./Card/Card\";\nimport CardCollection from \"../CardCollection/CardCollection\";\nimport FetchImagesFromApi from \"../FetchImagesFromApi/FetchImagesFromApi\"; //hooks\n//context\n\nimport SearchContext from \"../../SearchContext\";\nimport ImagesContext from \"../../ImagesContext\";\nimport LoadingContext from \"../../LoadingContext\";\n\nconst Home = ({\n  history\n}) => {\n  const {\n    SearchString,\n    setSearchString\n  } = useContext(SearchContext);\n  const [imgNumber, setimgNumber] = useState(1);\n  const [Loading, setLoading] = useState(true);\n  /* const [lastImgElement] = useInfiniteScroll(Loading); */\n\n  const observer = useRef();\n  const lastImgElement = useCallback(node => {\n    if (Loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      console.log(entries);\n\n      if (entries[0].isIntersecting) {\n        console.log(\"visible\");\n        setimgNumber(previmgNumber => previmgNumber + 1);\n      }\n    });\n\n    if (node) {\n      observer.current.observe(node);\n    }\n\n    console.log(node);\n  }, [Loading]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(LoadingContext.Provider, {\n    value: {\n      Loading,\n      setLoading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FetchImagesFromApi, {\n    query: SearchString,\n    pageNumber: imgNumber,\n    render: (Loading, ImgArr) => {\n      console.log(\"heloooo\", ImgArr);\n      return /*#__PURE__*/React.createElement(CardCollection, {\n        history: history,\n        lastImgElement: lastImgElement,\n        Loading: Loading,\n        ImgArr: ImgArr,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 8\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/Home/Home.js"],"names":["React","useState","useContext","useEffect","useRef","useCallback","Styles","CircularProgress","Card","CardCollection","FetchImagesFromApi","SearchContext","ImagesContext","LoadingContext","Home","history","SearchString","setSearchString","imgNumber","setimgNumber","Loading","setLoading","observer","lastImgElement","node","current","disconnect","IntersectionObserver","entries","console","log","isIntersecting","previmgNumber","observe","container","ImgArr"],"mappings":";AAAA,OAAOA,KAAP,IACCC,QADD,EAECC,UAFD,EAGCC,SAHD,EAICC,MAJD,EAKCC,WALD,QAMO,OANP;AAOA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,QAAiC,mBAAjC,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B,C,CACA;AAEA;;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC7B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCf,UAAU,CAACS,aAAD,CAApD;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AACA;;AAEA,QAAMqB,QAAQ,GAAGlB,MAAM,EAAvB;AACA,QAAMmB,cAAc,GAAGlB,WAAW,CAChCmB,IAAD,IAAU;AACT,QAAIJ,OAAJ,EAAa;AACb,QAAIE,QAAQ,CAACG,OAAb,EAAsBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AAEtBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAA0BC,OAAD,IAAa;AACxDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWG,cAAf,EAA+B;AAC9BF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAX,QAAAA,YAAY,CAAEa,aAAD,IAAmBA,aAAa,GAAG,CAApC,CAAZ;AACA;AACD,KANkB,CAAnB;;AAOA,QAAIR,IAAJ,EAAU;AACTF,MAAAA,QAAQ,CAACG,OAAT,CAAiBQ,OAAjB,CAAyBT,IAAzB;AACA;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,GAhBgC,EAiBjC,CAACJ,OAAD,CAjBiC,CAAlC;AAoBA,sBACC;AAAK,IAAA,SAAS,EAAEd,MAAM,CAAC4B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEd,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,kBAAD;AACC,IAAA,KAAK,EAAEL,YADR;AAEC,IAAA,UAAU,EAAEE,SAFb;AAGC,IAAA,MAAM,EAAE,CAACE,OAAD,EAAUe,MAAV,KAAqB;AAC5BN,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,MAAvB;AACA,0BACC,oBAAC,cAAD;AACC,QAAA,OAAO,EAAEpB,OADV;AAEC,QAAA,cAAc,EAAEQ,cAFjB;AAGC,QAAA,OAAO,EAAEH,OAHV;AAIC,QAAA,MAAM,EAAEe,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAQA,KAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADD;AAqBA,CAhDD;;AAiDA,eAAerB,IAAf","sourcesContent":["import React, {\r\n\tuseState,\r\n\tuseContext,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseCallback,\r\n} from \"react\";\r\nimport Styles from \"./Home.module.css\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\n//components\r\nimport Card from \"./Card/Card\";\r\nimport CardCollection from \"../CardCollection/CardCollection\";\r\nimport FetchImagesFromApi from \"../FetchImagesFromApi/FetchImagesFromApi\";\r\n//hooks\r\n\r\n//context\r\nimport SearchContext from \"../../SearchContext\";\r\nimport ImagesContext from \"../../ImagesContext\";\r\nimport LoadingContext from \"../../LoadingContext\";\r\nconst Home = ({ history }) => {\r\n\tconst { SearchString, setSearchString } = useContext(SearchContext);\r\n\tconst [imgNumber, setimgNumber] = useState(1);\r\n\tconst [Loading, setLoading] = useState(true);\r\n\t/* const [lastImgElement] = useInfiniteScroll(Loading); */\r\n\r\n\tconst observer = useRef();\r\n\tconst lastImgElement = useCallback(\r\n\t\t(node) => {\r\n\t\t\tif (Loading) return;\r\n\t\t\tif (observer.current) observer.current.disconnect();\r\n\r\n\t\t\tobserver.current = new IntersectionObserver((entries) => {\r\n\t\t\t\tconsole.log(entries);\r\n\t\t\t\tif (entries[0].isIntersecting) {\r\n\t\t\t\t\tconsole.log(\"visible\");\r\n\t\t\t\t\tsetimgNumber((previmgNumber) => previmgNumber + 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (node) {\r\n\t\t\t\tobserver.current.observe(node);\r\n\t\t\t}\r\n\t\t\tconsole.log(node);\r\n\t\t},\r\n\t\t[Loading]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={Styles.container}>\r\n\t\t\t<LoadingContext.Provider value={{ Loading, setLoading }}>\r\n\t\t\t\t<FetchImagesFromApi\r\n\t\t\t\t\tquery={SearchString}\r\n\t\t\t\t\tpageNumber={imgNumber}\r\n\t\t\t\t\trender={(Loading, ImgArr) => {\r\n\t\t\t\t\t\tconsole.log(\"heloooo\", ImgArr);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<CardCollection\r\n\t\t\t\t\t\t\t\thistory={history}\r\n\t\t\t\t\t\t\t\tlastImgElement={lastImgElement}\r\n\t\t\t\t\t\t\t\tLoading={Loading}\r\n\t\t\t\t\t\t\t\tImgArr={ImgArr}\r\n\t\t\t\t\t\t\t></CardCollection>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t></FetchImagesFromApi>\r\n\t\t\t</LoadingContext.Provider>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}