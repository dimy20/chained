{"ast":null,"code":"import { useState, useEffect, useContext, useRef } from 'react';\nimport SearchContext from '../../SearchContext';\nimport axios from 'axios';\n\nconst useCard = URL => {\n  const [imgArr, setimgArr] = useState([]);\n  /*   const [Loading,setLoading] = useState(true); */\n\n  useEffect(() => {\n    let cancel;\n    axios({\n      method: 'GET',\n      url: URL,\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(response => {\n      setimgArr(response.data.hits);\n      /*  setLoading(false) */\n    }).catch(err => {\n      if (axios.isCancel(err)) {\n        return;\n      }\n\n      console.log(err);\n    });\n    return () => cancel();\n  }, []);\n  return [imgArr];\n};\n\nexport default useCard;","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/Home/useHome.js"],"names":["useState","useEffect","useContext","useRef","SearchContext","axios","useCard","URL","imgArr","setimgArr","cancel","method","url","cancelToken","CancelToken","c","then","response","data","hits","catch","err","isCancel","console","log"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,SAAjB,EAA2BC,UAA3B,EAAuCC,MAAvC,QAAoD,OAApD;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAO,GAAIC,GAAD,IAAO;AACnB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AACF;;AACEC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIS,MAAJ;AAEAL,IAAAA,KAAK,CAAC;AACFM,MAAAA,MAAM,EAAG,KADP;AAEFC,MAAAA,GAAG,EAAGL,GAFJ;AAGFM,MAAAA,WAAW,EAAG,IAAIR,KAAK,CAACS,WAAV,CAAsBC,CAAC,IAAGL,MAAM,GAAIK,CAApC;AAHZ,KAAD,CAAL,CAKCC,IALD,CAKMC,QAAQ,IAAG;AACbR,MAAAA,SAAS,CAACQ,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAT;AACD;AACF,KARD,EASCC,KATD,CASOC,GAAG,IAAE;AACR,UAAGhB,KAAK,CAACiB,QAAN,CAAeD,GAAf,CAAH,EAAuB;AACnB;AACH;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,KAdD;AAeA,WAAO,MAAKX,MAAM,EAAlB;AACH,GAnBQ,EAmBP,EAnBO,CAAT;AAoBA,SAAO,CAACF,MAAD,CAAP;AACH,CAxBD;;AAyBA,eAAeF,OAAf","sourcesContent":["import {useState,useEffect,useContext, useRef} from 'react';\r\nimport SearchContext from '../../SearchContext'\r\nimport axios from 'axios';\r\nconst useCard = (URL)=>{\r\n    const [imgArr,setimgArr] = useState([]);\r\n  /*   const [Loading,setLoading] = useState(true); */\r\n    useEffect(()=>{\r\n        let cancel;\r\n        \r\n        axios({\r\n            method : 'GET',\r\n            url : URL,\r\n            cancelToken : new axios.CancelToken(c=> cancel  = c)\r\n        })\r\n        .then(response =>{\r\n            setimgArr(response.data.hits);\r\n           /*  setLoading(false) */\r\n        })\r\n        .catch(err=>{\r\n            if(axios.isCancel(err)){\r\n                return\r\n            }\r\n            console.log(err)\r\n        })\r\n        return ()=> cancel();\r\n    },[])\r\n    return [imgArr];\r\n}\r\nexport default useCard;\r\n"]},"metadata":{},"sourceType":"module"}