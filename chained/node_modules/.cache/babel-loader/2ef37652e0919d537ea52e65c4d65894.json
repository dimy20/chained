{"ast":null,"code":"import { useState, useEffect, useContext, useRef } from 'react';\nimport ImagesContext from '../../ImagesContext';\nimport axios from 'axios';\n\nconst useHome = (query, imgNumber) => {\n  const [Loading, setLoading] = useState(true);\n  const [Err, setErr] = useState(false);\n  const [ImgArr, setImgArr] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  const {\n    ImgArrContext,\n    setImgArrContext\n  } = useContext(ImagesContext);\n  useEffect(() => {\n    setImgArrContext(ImgArr);\n  }, [ImgArr]);\n  useEffect(() => {\n    setImgArr([]);\n  }, [query]);\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios({\n      method: 'GET',\n      url: `https://pixabay.com/api/?key=16381049-c197cfa5caeabac8c93d8da2c&q=${query}&image_type=photo&per_page=${21}&page=${imgNumber}`,\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(response => {\n      //FIX THIS REPETTITIOS\n      setImgArr(prevImgs => {\n        return [...new Set([...prevImgs, ...response.data.hits])];\n      });\n      /*  setImgArrContext(prevImgs=>{\r\n           return [...new Set([...prevImgs,...response.data.hits.largeImageURL])]\r\n       }); */\n\n      setLoading(false);\n    }).catch(err => {\n      //ignore everytime we cancel the request\n      if (axios.isCancel(err)) {\n        return;\n      }\n\n      setErr(true);\n    });\n    return () => cancel();\n  }, [query, imgNumber]);\n  return {\n    Loading,\n    Err,\n    ImgArr,\n    hasMore\n  };\n};\n\nexport default useHome;","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/Home/useHome.js"],"names":["useState","useEffect","useContext","useRef","ImagesContext","axios","useHome","query","imgNumber","Loading","setLoading","Err","setErr","ImgArr","setImgArr","hasMore","setHasMore","ImgArrContext","setImgArrContext","cancel","method","url","cancelToken","CancelToken","c","then","response","prevImgs","Set","data","hits","catch","err","isCancel"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,SAAjB,EAA2BC,UAA3B,EAAuCC,MAAvC,QAAoD,OAApD;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,SAAP,KAAmB;AAC9B,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACW,GAAD,EAAKC,MAAL,IAAeZ,QAAQ,CAAC,KAAD,CAA7B;AACA,QAAM,CAACa,MAAD,EAAQC,SAAR,IAAqBd,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACe,OAAD,EAASC,UAAT,IAAuBhB,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM;AAACiB,IAAAA,aAAD;AAAeC,IAAAA;AAAf,MAAmChB,UAAU,CAACE,aAAD,CAAnD;AACAH,EAAAA,SAAS,CAAC,MAAI;AACXiB,IAAAA,gBAAgB,CAACL,MAAD,CAAhB;AACF,GAFQ,EAEP,CAACA,MAAD,CAFO,CAAT;AAGAZ,EAAAA,SAAS,CAAC,MAAI;AACXa,IAAAA,SAAS,CAAC,EAAD,CAAT;AACF,GAFQ,EAEP,CAACP,KAAD,CAFO,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAI;AACXS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIS,MAAJ;AACAd,IAAAA,KAAK,CAAC;AACFe,MAAAA,MAAM,EAAG,KADP;AAEFC,MAAAA,GAAG,EAAG,qEAAoEd,KAAM,8BAA6B,EAAG,SAAQC,SAAU,EAFhI;AAGFc,MAAAA,WAAW,EAAG,IAAIjB,KAAK,CAACkB,WAAV,CAAuBC,CAAD,IAAML,MAAM,GAAGK,CAArC;AAHZ,KAAD,CAAL,CAKCC,IALD,CAKMC,QAAQ,IAAE;AACZ;AACAZ,MAAAA,SAAS,CAACa,QAAQ,IAAE;AAChB,eAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,QAAJ,EAAa,GAAGD,QAAQ,CAACG,IAAT,CAAcC,IAA9B,CAAR,CAAJ,CAAP;AACH,OAFQ,CAAT;AAGD;;;;AAGCpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAdD,EAcGqB,KAdH,CAcSC,GAAG,IAAE;AACV;AACA,UAAG3B,KAAK,CAAC4B,QAAN,CAAeD,GAAf,CAAH,EAAuB;AACnB;AACH;;AACDpB,MAAAA,MAAM,CAAC,IAAD,CAAN;AACH,KApBD;AAqBA,WAAO,MAAKO,MAAM,EAAlB;AACH,GAzBS,EAyBR,CAACZ,KAAD,EAAOC,SAAP,CAzBQ,CAAT;AA2BD,SAAO;AAACC,IAAAA,OAAD;AAASE,IAAAA,GAAT;AAAaE,IAAAA,MAAb;AAAoBE,IAAAA;AAApB,GAAP;AACH,CAzCD;;AA0CA,eAAeT,OAAf","sourcesContent":["import {useState,useEffect,useContext, useRef} from 'react';\r\nimport ImagesContext from '../../ImagesContext';\r\nimport axios from 'axios';\r\nconst useHome = (query,imgNumber)=>{\r\n     const [Loading,setLoading] = useState(true);\r\n     const [Err,setErr] = useState(false);\r\n     const [ImgArr,setImgArr] = useState([]);\r\n     const [hasMore,setHasMore] = useState(false);\r\n     const {ImgArrContext,setImgArrContext} = useContext(ImagesContext);\r\n     useEffect(()=>{\r\n        setImgArrContext(ImgArr)\r\n     },[ImgArr])\r\n     useEffect(()=>{\r\n        setImgArr([]);\r\n     },[query]);\r\n\r\n     useEffect(()=>{\r\n        setLoading(true);\r\n        let cancel;\r\n        axios({\r\n            method : 'GET',\r\n            url :`https://pixabay.com/api/?key=16381049-c197cfa5caeabac8c93d8da2c&q=${query}&image_type=photo&per_page=${21}&page=${imgNumber}`,\r\n            cancelToken : new axios.CancelToken((c)=> cancel = c)\r\n        })\r\n        .then(response=>{\r\n            //FIX THIS REPETTITIOS\r\n            setImgArr(prevImgs=>{\r\n                return [...new Set([...prevImgs,...response.data.hits])]\r\n            });\r\n           /*  setImgArrContext(prevImgs=>{\r\n                return [...new Set([...prevImgs,...response.data.hits.largeImageURL])]\r\n            }); */\r\n            setLoading(false);\r\n        }).catch(err=>{\r\n            //ignore everytime we cancel the request\r\n            if(axios.isCancel(err)){\r\n                return\r\n            }\r\n            setErr(true);\r\n        })\r\n        return ()=> cancel();\r\n    },[query,imgNumber])   \r\n\r\n    return {Loading,Err,ImgArr,hasMore}\r\n}\r\nexport default useHome;\r\n"]},"metadata":{},"sourceType":"module"}