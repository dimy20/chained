{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\Home\\\\Card\\\\Card.js\";\nimport React, { useRef, useState } from 'react';\nimport Styles from './Card.module.css';\nimport { Popover, OverlayTrigger, ListGroup } from 'react-bootstrap';\n\nconst Card = props => {\n  const {\n    src\n  } = props;\n  const [IsHovered, setIsHovered] = useState(false);\n\n  const handleOnMouseOver = () => {\n    setIsHovered(true);\n  };\n\n  const handleOnMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  const popover = /*#__PURE__*/React.createElement(Popover, {\n    id: \"popover-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Popover.Title, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"This pin is based on your recent activity\"), /*#__PURE__*/React.createElement(Popover.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.testContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: Styles.test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"test\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: Styles.test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"test\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: Styles.test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"test\"))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseLeave: handleOnMouseLeave,\n    onMouseOver: handleOnMouseOver,\n    className: Styles.Wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: IsHovered ? Styles.imgOnHover : Styles.img,\n    src: src,\n    height: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), IsHovered && /*#__PURE__*/React.createElement(\"button\", {\n    className: Styles.GuardarButtonVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"GUARDAR\"), IsHovered && /*#__PURE__*/React.createElement(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"right\",\n    overlay: popover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: Styles.OptionsButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"...\")));\n};\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/Home/Card/Card.js"],"names":["React","useRef","useState","Styles","Popover","OverlayTrigger","ListGroup","Card","props","src","IsHovered","setIsHovered","handleOnMouseOver","handleOnMouseLeave","popover","testContainer","test","Wrapper","imgOnHover","img","GuardarButtonVisible","OptionsButton"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAsBC,QAAtB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,OAAR,EAAgBC,cAAhB,EAA+BC,SAA/B,QAA+C,iBAA/C;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAS;AAClB,QAAM;AAACC,IAAAA;AAAD,MAAQD,KAAd;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMU,iBAAiB,GAAG,MAAI;AAC1BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAGA,QAAME,kBAAkB,GAAG,MAAI;AAC3BF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAIA,QAAMG,OAAO,gBACT,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD,CAAS,KAAT;AAAe,IAAA,EAAE,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,eAEE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAIX,MAAM,CAACY,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,SAAS,EAAIZ,MAAM,CAACa,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,IAAA,SAAS,EAAIb,MAAM,CAACa,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,IAAA,SAAS,EAAIb,MAAM,CAACa,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,CANF,CAFF,CADJ;AAmBA,sBACI;AAAK,IAAA,YAAY,EAAIH,kBAArB;AAAyC,IAAA,WAAW,EAAGD,iBAAvD;AAA0E,IAAA,SAAS,EAAIT,MAAM,CAACc,OAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,SAAS,EAAIP,SAAS,GAAGP,MAAM,CAACe,UAAV,GAAuBf,MAAM,CAACgB,GAAzD;AAA8D,IAAA,GAAG,EAAIV,GAArE;AAA0E,IAAA,MAAM,EAAG,OAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAGaC,SAAS,iBACN;AAAQ,IAAA,SAAS,EAAIP,MAAM,CAACiB,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJhB,EAQaV,SAAS,iBACN,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAG,OAA1B;AAAkC,IAAA,SAAS,EAAG,OAA9C;AAAsD,IAAA,OAAO,EAAII,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAQ,IAAA,SAAS,EAAIX,MAAM,CAACkB,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CAThB,CADJ;AAmBH,CAhDD;;AAiDA,eAAed,IAAf","sourcesContent":["import React, {useRef,useState} from 'react';\r\nimport Styles from './Card.module.css';\r\nimport {Popover,OverlayTrigger,ListGroup} from 'react-bootstrap';\r\nconst Card = (props)=>{\r\n    const {src} = props;\r\n    const [IsHovered, setIsHovered] = useState(false);\r\n    const handleOnMouseOver = ()=>{\r\n        setIsHovered(true);\r\n    }\r\n    const handleOnMouseLeave = ()=>{\r\n        setIsHovered(false);\r\n    }\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n          <Popover.Title as=\"h2\">This pin is based on your recent activity</Popover.Title>\r\n          <Popover.Content>\r\n           {/*  <ListGroup >\r\n                <ListGroup.Item action href=\"#link1\">Hide pin</ListGroup.Item>\r\n                <ListGroup.Item action href=\"#link1\">Download image</ListGroup.Item>\r\n                <ListGroup.Item action href=\"#link1\"s>Report pin</ListGroup.Item>\r\n            </ListGroup> */}\r\n            <div className = {Styles.testContainer}>\r\n            <button className = {Styles.test}>test</button>\r\n            <button className = {Styles.test}>test</button>\r\n            <button className = {Styles.test}>test</button>\r\n            </div>\r\n           \r\n          </Popover.Content>\r\n        </Popover>\r\n      );\r\n\r\n    return (\r\n        <div onMouseLeave = {handleOnMouseLeave} onMouseOver= {handleOnMouseOver} className = {Styles.Wrapper}>\r\n                <img className = {IsHovered ? Styles.imgOnHover : Styles.img} src = {src} height = '200px'>\r\n                </img>\r\n                    {IsHovered &&                        \r\n                        <button className = {Styles.GuardarButtonVisible}>\r\n                        GUARDAR\r\n                        </button>  \r\n                    }\r\n                    {IsHovered &&\r\n                        <OverlayTrigger trigger = 'click' placement = 'right' overlay = {popover}>\r\n                        \r\n                            <button className = {Styles.OptionsButton}>...</button>\r\n                        \r\n                        </OverlayTrigger>\r\n                        \r\n                    }       \r\n        </div>\r\n    )\r\n}\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}