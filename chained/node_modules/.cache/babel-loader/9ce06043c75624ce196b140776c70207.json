{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst useAsyncData = ({\n  fetchFn = null\n}) => {\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadData = async () => {\n    setIsLoading(true);\n    setError();\n    console.log(fetchFn);\n\n    try {\n      const resp = await fetchFn();\n      console.log(resp);\n      setData(resp);\n      setIsLoading(false);\n    } catch (e) {\n      setError(e);\n      setIsLoading(false);\n      console.log(\"ups\");\n    }\n  }; // 'onMount'\n  // maybe load the data if required\n\n\n  useEffect(() => {\n    loadData();\n  }, []); // Return the state and the load function to the component\n\n  return {\n    data,\n    isLoading,\n    error,\n    loadData\n  };\n};\n\nexport default useAsyncData;","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/Homev2/Profile/useAsyncData.js"],"names":["useState","useEffect","useAsyncData","fetchFn","data","setData","error","setError","isLoading","setIsLoading","loadData","console","log","resp","e"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAO,GAAG;AAAZ,CAAD,KAAwB;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMU,QAAQ,GAAG,YAAY;AAC5BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,QAAQ;AACRI,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;;AACA,QAAI;AACH,YAAMU,IAAI,GAAG,MAAMV,OAAO,EAA1B;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACAR,MAAAA,OAAO,CAACQ,IAAD,CAAP;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,KALD,CAKE,OAAOK,CAAP,EAAU;AACXP,MAAAA,QAAQ,CAACO,CAAD,CAAR;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA;AACD,GAdD,CAJ4C,CAmB5C;AACA;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACfS,IAAAA,QAAQ;AACR,GAFQ,EAEN,EAFM,CAAT,CArB4C,CAyB5C;;AACA,SAAO;AAAEN,IAAAA,IAAF;AAAQI,IAAAA,SAAR;AAAmBF,IAAAA,KAAnB;AAA0BI,IAAAA;AAA1B,GAAP;AACA,CA3BD;;AA4BA,eAAeR,YAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useAsyncData = ({ fetchFn = null }) => {\r\n\tconst [data, setData] = useState();\r\n\tconst [error, setError] = useState();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst loadData = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tsetError();\r\n\t\tconsole.log(fetchFn);\r\n\t\ttry {\r\n\t\t\tconst resp = await fetchFn();\r\n\t\t\tconsole.log(resp);\r\n\t\t\tsetData(resp);\r\n\t\t\tsetIsLoading(false);\r\n\t\t} catch (e) {\r\n\t\t\tsetError(e);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tconsole.log(\"ups\");\r\n\t\t}\r\n\t};\r\n\t// 'onMount'\r\n\t// maybe load the data if required\r\n\tuseEffect(() => {\r\n\t\tloadData();\r\n\t}, []);\r\n\r\n\t// Return the state and the load function to the component\r\n\treturn { data, isLoading, error, loadData };\r\n};\r\nexport default useAsyncData;\r\n"]},"metadata":{},"sourceType":"module"}