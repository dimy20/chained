{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\desktop\\\\chained\\\\chained\\\\src\\\\Components\\\\AnimatedQuote\\\\AnimatedQuote.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Styles from \"./AnimatedQuote.module.css\";\nimport Typical from \"react-typical\";\n\nconst makeArr1000s = n => {\n  let arr = [];\n\n  for (let i = 0; i < n; i++) {\n    arr.push(1000);\n  }\n\n  return arr;\n};\n\nconst insert1000s = (quote, arr1000s) => {\n  let res = [];\n\n  for (let i = 0; i <= quote.length - 1; i++) {\n    res.push(quote[i]);\n    res.push(arr1000s[i]);\n  }\n\n  return res;\n};\n\nconst makeSteps = (string, n) => {\n  let count = 0;\n  let res = [];\n\n  for (let i = 0; i < string.length - 1; i++) {\n    if (string[i] === \" \") {\n      count++;\n    }\n\n    if (count === n) {\n      res = string.slice(0, i);\n    }\n  }\n\n  console.log(count);\n  return res;\n};\n\nexport default function AnimatedQuote(props) {\n  const quoteText = \"I love you, not only for what you are, but for what...\";\n  const NumberOfWords = quoteText.split(\" \").length;\n  console.log(quoteText);\n  console.log(NumberOfWords);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Styles.quote2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Typical, {\n    steps: [\"asdasdas\"],\n    loop: 1,\n    wrapper: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/usuario/desktop/chained/chained/src/Components/AnimatedQuote/AnimatedQuote.js"],"names":["React","useState","useEffect","Styles","Typical","makeArr1000s","n","arr","i","push","insert1000s","quote","arr1000s","res","length","makeSteps","string","count","slice","console","log","AnimatedQuote","props","quoteText","NumberOfWords","split","quote2"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AACA,MAAMC,YAAY,GAAIC,CAAD,IAAO;AAC3B,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AAC3BD,IAAAA,GAAG,CAACE,IAAJ,CAAS,IAAT;AACA;;AACD,SAAOF,GAAP;AACA,CAND;;AAOA,MAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIG,KAAK,CAACG,MAAN,GAAe,CAApC,EAAuCN,CAAC,EAAxC,EAA4C;AAC3CK,IAAAA,GAAG,CAACJ,IAAJ,CAASE,KAAK,CAACH,CAAD,CAAd;AACAK,IAAAA,GAAG,CAACJ,IAAJ,CAASG,QAAQ,CAACJ,CAAD,CAAjB;AACA;;AACD,SAAOK,GAAP;AACA,CAPD;;AAQA,MAAME,SAAS,GAAG,CAACC,MAAD,EAASV,CAAT,KAAe;AAChC,MAAIW,KAAK,GAAG,CAAZ;AACA,MAAIJ,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,MAAM,CAACF,MAAP,GAAgB,CAApC,EAAuCN,CAAC,EAAxC,EAA4C;AAC3C,QAAIQ,MAAM,CAACR,CAAD,CAAN,KAAc,GAAlB,EAAuB;AACtBS,MAAAA,KAAK;AACL;;AACD,QAAIA,KAAK,KAAKX,CAAd,EAAiB;AAChBO,MAAAA,GAAG,GAAGG,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgBV,CAAhB,CAAN;AACA;AACD;;AACDW,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SAAOJ,GAAP;AACA,CAbD;;AAcA,eAAe,SAASQ,aAAT,CAAuBC,KAAvB,EAA8B;AAC5C,QAAMC,SAAS,GAAG,wDAAlB;AACA,QAAMC,aAAa,GAAGD,SAAS,CAACE,KAAV,CAAgB,GAAhB,EAAqBX,MAA3C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYI,aAAZ;AACA,sBACC;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACuB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE,CAAC,UAAD,CAAhB;AAA8B,IAAA,IAAI,EAAE,CAApC;AAAuC,IAAA,OAAO,EAAC,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAKA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Styles from \"./AnimatedQuote.module.css\";\r\nimport Typical from \"react-typical\";\r\nconst makeArr1000s = (n) => {\r\n\tlet arr = [];\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tarr.push(1000);\r\n\t}\r\n\treturn arr;\r\n};\r\nconst insert1000s = (quote, arr1000s) => {\r\n\tlet res = [];\r\n\tfor (let i = 0; i <= quote.length - 1; i++) {\r\n\t\tres.push(quote[i]);\r\n\t\tres.push(arr1000s[i]);\r\n\t}\r\n\treturn res;\r\n};\r\nconst makeSteps = (string, n) => {\r\n\tlet count = 0;\r\n\tlet res = [];\r\n\tfor (let i = 0; i < string.length - 1; i++) {\r\n\t\tif (string[i] === \" \") {\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\tif (count === n) {\r\n\t\t\tres = string.slice(0, i);\r\n\t\t}\r\n\t}\r\n\tconsole.log(count);\r\n\treturn res;\r\n};\r\nexport default function AnimatedQuote(props) {\r\n\tconst quoteText = \"I love you, not only for what you are, but for what...\";\r\n\tconst NumberOfWords = quoteText.split(\" \").length;\r\n\tconsole.log(quoteText);\r\n\tconsole.log(NumberOfWords);\r\n\treturn (\r\n\t\t<div className={Styles.quote2}>\r\n\t\t\t<Typical steps={[\"asdasdas\"]} loop={1} wrapper=\"p\" />\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}